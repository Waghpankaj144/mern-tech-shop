{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\mern-tech-shop\\\\tech-shop\\\\src\\\\context\\\\filter_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer, useEffect } from \"react\";\nimport { useProductContext } from \"./productcontex\";\nimport reducer from \"../reducer/filterReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterContext = /*#__PURE__*/createContext();\nconst initialState = {\n  filter_products: [],\n  all_products: [],\n  grid_view: true,\n  sorting_value: \"lowest\",\n  filters: {\n    text: \"\",\n    category: \"all\",\n    company: \"all\",\n    color: \"all\",\n    maxPrice: 0,\n    price: 0,\n    minPrice: 0\n  }\n};\nexport const FilterContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    products\n  } = useProductContext();\n  const [state, dispatch] = useReducer(reducer, initialState); // to set the grid view\n\n  const setGridView = () => {\n    return dispatch({\n      type: \"SET_GRID_VIEW\"\n    });\n  }; // sorting function\n\n\n  const sorting = event => {\n    let userValue = event.target.value;\n    dispatch({\n      type: \"GET_SORT_VALUE\",\n      payload: userValue\n    });\n  }; // update the filter values\n\n\n  const updateFilterValue = event => {\n    let name = event.target.name;\n    let value = event.target.value;\n    return dispatch({\n      type: \"UPDATE_FILTERS_VALUE\",\n      payload: {\n        name,\n        value\n      }\n    });\n  }; // to clear the filter\n\n\n  const clearFilters = () => {\n    dispatch({\n      type: \"CLEAR_FILTERS\"\n    });\n  }; // to sort the product\n\n\n  useEffect(() => {\n    dispatch({\n      type: \"FILTER_PRODUCTS\"\n    });\n    dispatch({\n      type: \"SORTING_PRODUCTS\"\n    });\n  }, [products, state.sorting_value, state.filters]); // to load all the products for grid and list view\n\n  useEffect(() => {\n    dispatch({\n      type: \"LOAD_FILTER_PRODUCTS\",\n      payload: products\n    });\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: { ...state,\n      setGridView,\n      sorting,\n      updateFilterValue,\n      clearFilters\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilterContextProvider, \"/D3NV/x4qf1s/6HNJiZbe3IRDzk=\", false, function () {\n  return [useProductContext];\n});\n\n_c = FilterContextProvider;\nexport const useFilterContext = () => {\n  _s2();\n\n  return useContext(FilterContext);\n};\n\n_s2(useFilterContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterContextProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","useEffect","useProductContext","reducer","FilterContext","initialState","filter_products","all_products","grid_view","sorting_value","filters","text","category","company","color","maxPrice","price","minPrice","FilterContextProvider","children","products","state","dispatch","setGridView","type","sorting","event","userValue","target","value","payload","updateFilterValue","name","clearFilters","useFilterContext"],"sources":["C:/Users/User/Downloads/mern-tech-shop/tech-shop/src/context/filter_context.js"],"sourcesContent":["import { createContext, useContext, useReducer, useEffect } from \"react\";\r\nimport { useProductContext } from \"./productcontex\";\r\nimport reducer from \"../reducer/filterReducer\";\r\n\r\nconst FilterContext = createContext();\r\n\r\nconst initialState = {\r\n  filter_products: [],\r\n  all_products: [],\r\n  grid_view: true,\r\n  sorting_value: \"lowest\",\r\n  filters: {\r\n    text: \"\",\r\n    category: \"all\",\r\n    company: \"all\",\r\n    color: \"all\",\r\n    maxPrice: 0,\r\n    price: 0,\r\n    minPrice: 0,\r\n  },\r\n};\r\n\r\nexport const FilterContextProvider = ({ children }) => {\r\n  const { products } = useProductContext();\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // to set the grid view\r\n  const setGridView = () => {\r\n    return dispatch({ type: \"SET_GRID_VIEW\" });\r\n  };\r\n\r\n  \r\n\r\n  // sorting function\r\n  const sorting = (event) => {\r\n    let userValue = event.target.value;\r\n    dispatch({ type: \"GET_SORT_VALUE\", payload: userValue });\r\n  };\r\n\r\n  // update the filter values\r\n  const updateFilterValue = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n\r\n    return dispatch({ type: \"UPDATE_FILTERS_VALUE\", payload: { name, value } });\r\n  };\r\n\r\n  // to clear the filter\r\n  const clearFilters = () => {\r\n    dispatch({ type: \"CLEAR_FILTERS\" });\r\n  };\r\n\r\n  // to sort the product\r\n  useEffect(() => {\r\n    dispatch({ type: \"FILTER_PRODUCTS\" });\r\n    dispatch({ type: \"SORTING_PRODUCTS\" });\r\n  }, [products, state.sorting_value, state.filters]);\r\n\r\n  // to load all the products for grid and list view\r\n  useEffect(() => {\r\n    dispatch({ type: \"LOAD_FILTER_PRODUCTS\", payload: products });\r\n  }, [products]);\r\n\r\n  return (\r\n    <FilterContext.Provider\r\n      value={{\r\n        ...state,\r\n        setGridView,\r\n     \r\n        sorting,\r\n        updateFilterValue,\r\n        clearFilters,\r\n      }}>\r\n      {children}\r\n    </FilterContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFilterContext = () => {\r\n  return useContext(FilterContext);\r\n};\r\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,SAAhD,QAAiE,OAAjE;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,aAAa,gBAAGN,aAAa,EAAnC;AAEA,MAAMO,YAAY,GAAG;EACnBC,eAAe,EAAE,EADE;EAEnBC,YAAY,EAAE,EAFK;EAGnBC,SAAS,EAAE,IAHQ;EAInBC,aAAa,EAAE,QAJI;EAKnBC,OAAO,EAAE;IACPC,IAAI,EAAE,EADC;IAEPC,QAAQ,EAAE,KAFH;IAGPC,OAAO,EAAE,KAHF;IAIPC,KAAK,EAAE,KAJA;IAKPC,QAAQ,EAAE,CALH;IAMPC,KAAK,EAAE,CANA;IAOPC,QAAQ,EAAE;EAPH;AALU,CAArB;AAgBA,OAAO,MAAMC,qBAAqB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACrD,MAAM;IAAEC;EAAF,IAAelB,iBAAiB,EAAtC;EAEA,MAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACG,OAAD,EAAUE,YAAV,CAApC,CAHqD,CAKrD;;EACA,MAAMkB,WAAW,GAAG,MAAM;IACxB,OAAOD,QAAQ,CAAC;MAAEE,IAAI,EAAE;IAAR,CAAD,CAAf;EACD,CAFD,CANqD,CAYrD;;;EACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;IACzB,IAAIC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;IACAP,QAAQ,CAAC;MAAEE,IAAI,EAAE,gBAAR;MAA0BM,OAAO,EAAEH;IAAnC,CAAD,CAAR;EACD,CAHD,CAbqD,CAkBrD;;;EACA,MAAMI,iBAAiB,GAAIL,KAAD,IAAW;IACnC,IAAIM,IAAI,GAAGN,KAAK,CAACE,MAAN,CAAaI,IAAxB;IACA,IAAIH,KAAK,GAAGH,KAAK,CAACE,MAAN,CAAaC,KAAzB;IAEA,OAAOP,QAAQ,CAAC;MAAEE,IAAI,EAAE,sBAAR;MAAgCM,OAAO,EAAE;QAAEE,IAAF;QAAQH;MAAR;IAAzC,CAAD,CAAf;EACD,CALD,CAnBqD,CA0BrD;;;EACA,MAAMI,YAAY,GAAG,MAAM;IACzBX,QAAQ,CAAC;MAAEE,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAFD,CA3BqD,CA+BrD;;;EACAvB,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAAC;MAAEE,IAAI,EAAE;IAAR,CAAD,CAAR;IACAF,QAAQ,CAAC;MAAEE,IAAI,EAAE;IAAR,CAAD,CAAR;EACD,CAHQ,EAGN,CAACJ,QAAD,EAAWC,KAAK,CAACZ,aAAjB,EAAgCY,KAAK,CAACX,OAAtC,CAHM,CAAT,CAhCqD,CAqCrD;;EACAT,SAAS,CAAC,MAAM;IACdqB,QAAQ,CAAC;MAAEE,IAAI,EAAE,sBAAR;MAAgCM,OAAO,EAAEV;IAAzC,CAAD,CAAR;EACD,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;EAIA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE,EACL,GAAGC,KADE;MAELE,WAFK;MAILE,OAJK;MAKLM,iBALK;MAMLE;IANK,CADT;IAAA,UASGd;EATH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CAvDM;;GAAMD,qB;UACUhB,iB;;;KADVgB,qB;AAyDb,OAAO,MAAMgB,gBAAgB,GAAG,MAAM;EAAA;;EACpC,OAAOnC,UAAU,CAACK,aAAD,CAAjB;AACD,CAFM;;IAAM8B,gB"},"metadata":{},"sourceType":"module"}