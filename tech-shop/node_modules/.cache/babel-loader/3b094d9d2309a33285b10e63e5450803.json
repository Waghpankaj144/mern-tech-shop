{"ast":null,"code":"import _toConsumableArray from\"C:/Users/User/Downloads/totalitycorp-frontend-challenge-main/tech-shop/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/User/Downloads/totalitycorp-frontend-challenge-main/tech-shop/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";var cartReducer=function cartReducer(state,action){if(action.type===\"ADD_TO_CART\"){var _state$cart;var _action$payload=action.payload,id=_action$payload.id,color=_action$payload.color,amount=_action$payload.amount,product=_action$payload.product;// tackle the existing product\nvar existingProduct=(_state$cart=state.cart)===null||_state$cart===void 0?void 0:_state$cart.find(function(curItem){return curItem.id===id+color;});if(existingProduct){var _state$cart2;var updatedProduct=(_state$cart2=state.cart)===null||_state$cart2===void 0?void 0:_state$cart2.map(function(curElem){if(curElem.id===id+color){var newAmount=curElem.amount+amount;if(newAmount>=curElem.max){newAmount=curElem.max;}return _objectSpread(_objectSpread({},curElem),{},{amount:newAmount});}else{return curElem;}});return _objectSpread(_objectSpread({},state),{},{cart:updatedProduct});}else{var cartProduct={id:id+color,name:product.name,color:color,amount:amount,image:product.image[0].url,price:product.price,max:product.stock};return _objectSpread(_objectSpread({},state),{},{cart:[].concat(_toConsumableArray(state.cart),[cartProduct])});}}// to set the increment and decrement\nif(action.type===\"SET_DECREMENT\"){var _state$cart3;var _updatedProduct=(_state$cart3=state.cart)===null||_state$cart3===void 0?void 0:_state$cart3.map(function(curElem){if(curElem.id===action.payload){var decAmount=curElem.amount-1;if(decAmount<=1){decAmount=1;}return _objectSpread(_objectSpread({},curElem),{},{amount:decAmount});}else{return curElem;}});return _objectSpread(_objectSpread({},state),{},{cart:_updatedProduct});}if(action.type===\"SET_INCREMENT\"){var _state$cart4;var _updatedProduct2=(_state$cart4=state.cart)===null||_state$cart4===void 0?void 0:_state$cart4.map(function(curElem){if(curElem.id===action.payload){var incAmount=curElem.amount+1;if(incAmount>=curElem.max){incAmount=curElem.max;}return _objectSpread(_objectSpread({},curElem),{},{amount:incAmount});}else{return curElem;}});return _objectSpread(_objectSpread({},state),{},{cart:_updatedProduct2});}if(action.type===\"REMOVE_ITEM\"){var _state$cart5;var updatedCart=(_state$cart5=state.cart)===null||_state$cart5===void 0?void 0:_state$cart5.filter(function(curItem){return curItem.id!==action.payload;});return _objectSpread(_objectSpread({},state),{},{cart:updatedCart});}// to empty or to clear to cart\nif(action.type===\"CLEAR_CART\"){return _objectSpread(_objectSpread({},state),{},{cart:[]});}// if (action.type === \"CART_TOTAL_ITEM\") {\n//   let updatedItemVal = state.cart.reduce((initialVal, curElem) => {\n//     let { amount } = curElem;\n//     initialVal = initialVal + amount;\n//     return initialVal;\n//   }, 0);\n//   return {\n//     ...state,\n//     total_item: updatedItemVal,\n//   };\n// }\n// if (action.type === \"CART_TOTAL_PRICE\") {\n//   let total_price = state.cart.reduce((initialVal, curElem) => {\n//     let { price, amount } = curElem;\n//     initialVal = initialVal + price * amount;\n//     return initialVal;\n//   }, 0);\n//   return {\n//     ...state,\n//     total_price,\n//   };\n// }\nif(action.type===\"CART_ITEM_PRICE_TOTAL\"){var _state$cart6;var _state$cart$reduce=(_state$cart6=state.cart)===null||_state$cart6===void 0?void 0:_state$cart6.reduce(function(accum,curElem){var price=curElem.price,amount=curElem.amount;accum.total_item+=amount;accum.total_price+=price*amount;return accum;},{total_item:0,total_price:0}),total_item=_state$cart$reduce.total_item,total_price=_state$cart$reduce.total_price;return _objectSpread(_objectSpread({},state),{},{total_item:total_item,total_price:total_price});}return state;};export default cartReducer;// https://stackoverflow.com/questions/63117470/how-to-return-two-values-in-reduce#:~:text=You%20cannot%20return%20two%20values%20in%20reduce%20.","map":{"version":3,"names":["cartReducer","state","action","type","payload","id","color","amount","product","existingProduct","cart","find","curItem","updatedProduct","map","curElem","newAmount","max","cartProduct","name","image","url","price","stock","decAmount","incAmount","updatedCart","filter","reduce","accum","total_item","total_price"],"sources":["C:/Users/User/Downloads/totalitycorp-frontend-challenge-main/tech-shop/src/reducer/cartReducer.js"],"sourcesContent":["const cartReducer = (state, action) => {\r\n  if (action.type === \"ADD_TO_CART\") {\r\n    let { id, color, amount, product } = action.payload;\r\n\r\n    // tackle the existing product\r\n\r\n    let existingProduct = state.cart?.find(\r\n      (curItem) => curItem.id === id + color\r\n    );\r\n\r\n    if (existingProduct) {\r\n      let updatedProduct = state.cart?.map((curElem) => {\r\n        if (curElem.id === id + color) {\r\n          let newAmount = curElem.amount + amount;\r\n\r\n          if (newAmount >= curElem.max) {\r\n            newAmount = curElem.max;\r\n          }\r\n          return {\r\n            ...curElem,\r\n            amount: newAmount,\r\n          };\r\n        } else {\r\n          return curElem;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        cart: updatedProduct,\r\n      };\r\n    } else {\r\n      let cartProduct = {\r\n        id: id + color,\r\n        name: product.name,\r\n        color,\r\n        amount,\r\n        image: product.image[0].url,\r\n        price: product.price,\r\n        max: product.stock,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, cartProduct],\r\n      };\r\n    }\r\n  }\r\n\r\n  // to set the increment and decrement\r\n  if (action.type === \"SET_DECREMENT\") {\r\n    let updatedProduct = state.cart?.map((curElem) => {\r\n      if (curElem.id === action.payload) {\r\n        let decAmount = curElem.amount - 1;\r\n\r\n        if (decAmount <= 1) {\r\n          decAmount = 1;\r\n        }\r\n\r\n        return {\r\n          ...curElem,\r\n          amount: decAmount,\r\n        };\r\n      } else {\r\n        return curElem;\r\n      }\r\n    });\r\n    return { ...state, cart: updatedProduct };\r\n  }\r\n\r\n  if (action.type === \"SET_INCREMENT\") {\r\n    let updatedProduct = state.cart?.map((curElem) => {\r\n      if (curElem.id === action.payload) {\r\n        let incAmount = curElem.amount + 1;\r\n\r\n        if (incAmount >= curElem.max) {\r\n          incAmount = curElem.max;\r\n        }\r\n\r\n        return {\r\n          ...curElem,\r\n          amount: incAmount,\r\n        };\r\n      } else {\r\n        return curElem;\r\n      }\r\n    });\r\n    return { ...state, cart: updatedProduct };\r\n  }\r\n\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n    let updatedCart = state.cart?.filter(\r\n      (curItem) => curItem.id !== action.payload\r\n    );\r\n    return {\r\n      ...state,\r\n      cart: updatedCart,\r\n    };\r\n  }\r\n\r\n  // to empty or to clear to cart\r\n  if (action.type === \"CLEAR_CART\") {\r\n    return {\r\n      ...state,\r\n      cart: [],\r\n    };\r\n  }\r\n\r\n  // if (action.type === \"CART_TOTAL_ITEM\") {\r\n  //   let updatedItemVal = state.cart.reduce((initialVal, curElem) => {\r\n  //     let { amount } = curElem;\r\n\r\n  //     initialVal = initialVal + amount;\r\n  //     return initialVal;\r\n  //   }, 0);\r\n\r\n  //   return {\r\n  //     ...state,\r\n  //     total_item: updatedItemVal,\r\n  //   };\r\n  // }\r\n\r\n  // if (action.type === \"CART_TOTAL_PRICE\") {\r\n  //   let total_price = state.cart.reduce((initialVal, curElem) => {\r\n  //     let { price, amount } = curElem;\r\n\r\n  //     initialVal = initialVal + price * amount;\r\n\r\n  //     return initialVal;\r\n  //   }, 0);\r\n\r\n  //   return {\r\n  //     ...state,\r\n  //     total_price,\r\n  //   };\r\n  // }\r\n\r\n  if (action.type === \"CART_ITEM_PRICE_TOTAL\") {\r\n    let { total_item, total_price } = state.cart?.reduce(\r\n      (accum, curElem) => {\r\n        let { price, amount } = curElem;\r\n\r\n        accum.total_item += amount;\r\n        accum.total_price += price * amount;\r\n\r\n        return accum;\r\n      },\r\n      {\r\n        total_item: 0,\r\n        total_price: 0,\r\n      }\r\n    );\r\n    return {\r\n      ...state,\r\n      total_item,\r\n      total_price,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default cartReducer;\r\n\r\n// https://stackoverflow.com/questions/63117470/how-to-return-two-values-in-reduce#:~:text=You%20cannot%20return%20two%20values%20in%20reduce%20.\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}